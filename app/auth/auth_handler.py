from typing import Dict
import jwt
import time

JWT_SECRET = """
-----BEGIN RSA PRIVATE KEY-----
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
-----END RSA PRIVATE KEY-----
"""
JWT_PUBLIC = """
-----BEGIN PUBLIC KEY-----
MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAp8WbUvmTdCCe17gynQH+
UV54JWpd/57HTt96TAjCj1wbIhROX5jLqCL8wmCGKtYhHNR21x8eJZf39GHOzDga
su+rG2gUqxjMaeMJJHDHNKPtCpVqvSQW8Mo84dQQiHBWmCll6pRoszI6Km4aFuY9
3BUJ1GwoyAmhxEm6XYeKeJFxcJY08/X2UE7OlzaRWMMVGFctUULdu/34gQGwF0yK
ItUQsY9ArjZ2JJ9c/eRw6fH8HXKniQg7SP6nllh/583Bm9v0U2d3hXudzgz43l4o
XxRuCp8FijOA0N3zta0jdlEr02ahlVqbJY54ZlSwrg98qE0ZAP2oyb+g9qAMwkrn
oHCdZsx/hTxKXA/DlfgYQlz/JxDjidnWyvU6nunu+IqFATDX46S4kkZPxyJ5V3C8
stoiEJcAAwEmp7loBPgx2/OE9sZ3sY5o6RbGbSdwfIdq55+vJlrq/k2D9oVgmpTO
29K3+G+LhE6W7JFyFWnYn7tb6plirDIfjjQgnkhLksGdzGGU3aRgqV/68J9FXjpz
H8nl5KDNSLVf++e/56YaswpcqWgnPFRCO5Z0IXzjSIWQeYrBVXg5FcWAqQA97Vxu
7wyuWGwj+4mIZ1lxVCHMmMHuEUIqe9CoeETNtF5z3IeP9oJSzuilr9EXoBka0Zdq
GYwk3bdY6lk7uJDFeXOUezMCAwEAAQ==
-----END PUBLIC KEY-----
"""
# config("secret")
JWT_ALGORITHM = 'HS256' # config("algorithm")

def signJWT(user) -> Dict[str, str]:
    payload = {
        "user": user,
    }
    token = jwt.encode(payload, JWT_SECRET, algorithm=JWT_ALGORITHM)
    payload['access_token'] = token
    return {
        "access_token": token
    }

def decodeJWT(token: str) -> dict:
    try:
        decoded_token = jwt.decode(token, JWT_PUBLIC, algorithms=[JWT_ALGORITHM])
        return decoded_token if decoded_token["expires"] >= time.time() else None
    except:
        return {}
    
    